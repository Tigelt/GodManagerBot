import asyncio
import json
import re
from telethon import TelegramClient
from configMC import FLAVOR_CHANNEL, API_ID, API_HASH, SESSION_FILE, DATA_DIR, FLAVOR_THREAD_ID, ACTUAL_BRANDS

async def update_base_flavor_descriptions(update, context):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç JSON —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –≤–∫—É—Å–æ–≤ –∏–∑ –≤–µ—Ç–∫–∏ 16"""
    try:
        print("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –≤–∫—É—Å–æ–≤...")
        
        # API –∫–ª—é—á–∏ –¥–ª—è Telethon (—Ä–∞–±–æ—á–∏–π –∞–∫–∫–∞—É–Ω—Ç)
        client = TelegramClient(SESSION_FILE, API_ID, API_HASH)
        await client.start()
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
            entity = await client.get_entity(FLAVOR_CHANNEL)
            print(f"üîç –ü–∞—Ä—Å—é –≤–µ—Ç–∫—É —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏: {entity.title} (Thread ID: {FLAVOR_THREAD_ID})")
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–µ—Ç–∫–µ —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏
            messages = []
            async for message in client.iter_messages(entity, reply_to=FLAVOR_THREAD_ID, limit=None):
                if message.text:  # –¢–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º
                    messages.append(message)
            
            print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π —Å –æ–ø–∏—Å–∞–Ω–∏—è–º–∏")
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –≤–∫—É—Å–æ–≤
            flavor_descriptions = {}
            
            # –ò–¥–µ–º –ø–æ –º–∞—Å—Å–∏–≤—É –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤
            for brand in ACTUAL_BRANDS:
                print(f"üîç –ò—â—É —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±—Ä–µ–Ω–¥–∞: {brand}")
                
                # –°–æ–∑–¥–∞–µ–º —Ö–µ—à—Ç–µ–≥ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
                hashtag = f"#{brand.lower().replace(' ', '')}"
                
                # –ò—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —ç—Ç–∏–º —Ö–µ—à—Ç–µ–≥–æ–º
                brand_messages = []
                for message in messages:
                    if message.text and hashtag in message.text.lower():
                        brand_messages.append(message)
                
                print(f"üìù –ù–∞–π–¥–µ–Ω–æ {len(brand_messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è {brand}")
                
                # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                if brand_messages:
                    flavor_descriptions[brand] = {}
                    
                    for message in brand_messages:
                        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∫—É—Å–∞
                        lines = message.text.strip().split('\n')
                        if lines:
                            flavor_name = lines[0].strip()
                            
                            # –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            message_link = f"https://t.me/{entity.username}/{message.id}"
                            
                            # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                            flavor_descriptions[brand][flavor_name] = message_link
                            print(f"  ‚úÖ {flavor_name} ‚Üí {message_link}")
                
                # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±—Ä–µ–Ω–¥–∞, —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Å–µ–∫—Ü–∏—é
                if brand not in flavor_descriptions:
                    flavor_descriptions[brand] = {}
                    print(f"  ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è {brand}")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é "–û—Å—Ç–∞–ª—å–Ω—ã–µ" –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –±–µ–∑ —Ö–µ—à—Ç–µ–≥–æ–≤ –±—Ä–µ–Ω–¥–æ–≤
            print("üîç –ò—â—É —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ö–µ—à—Ç–µ–≥–æ–≤ –±—Ä–µ–Ω–¥–æ–≤...")
            other_messages = []
            brand_hashtags = [f"#{brand.lower().replace(' ', '')}" for brand in ACTUAL_BRANDS]
            
            for message in messages:
                if message.text:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Ö–µ—à—Ç–µ–≥–∏ –±—Ä–µ–Ω–¥–æ–≤
                    has_brand_hashtag = any(hashtag in message.text.lower() for hashtag in brand_hashtags)
                    if not has_brand_hashtag:
                        other_messages.append(message)
            
            if other_messages:
                flavor_descriptions["–û—Å—Ç–∞–ª—å–Ω—ã–µ"] = {}
                for i, message in enumerate(other_messages[:20]):  # –ü–µ—Ä–≤—ã–µ 20 —Å–æ–æ–±—â–µ–Ω–∏–π
                    # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤ –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ
                    flavor_name = message.text[:20].strip()
                    message_link = f"https://t.me/{entity.username}/{message.id}"
                    flavor_descriptions["–û—Å—Ç–∞–ª—å–Ω—ã–µ"][flavor_name] = message_link
                    print(f"  ‚úÖ {flavor_name} ‚Üí {message_link}")
            
            print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –±—Ä–µ–Ω–¥–æ–≤: {len(flavor_descriptions)}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ JSON —Ñ–∞–π–ª
            output_file = f"{DATA_DIR}FlavorDescriptions.json"
            with open(output_file, "w", encoding="utf-8") as f:
                json.dump(flavor_descriptions, f, ensure_ascii=False, indent=2)
            
            print(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏—è –≤–∫—É—Å–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —á–∞—Ç
            total_flavors = sum(len(flavors) for flavors in flavor_descriptions.values())
            result_message = f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –≤–∫—É—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n\n"
            result_message += f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
            result_message += f"‚Ä¢ –ë—Ä–µ–Ω–¥–æ–≤: {len(flavor_descriptions)}\n"
            result_message += f"‚Ä¢ –í—Å–µ–≥–æ –≤–∫—É—Å–æ–≤: {total_flavors}\n\n"
            
            for brand, flavors in flavor_descriptions.items():
                if flavors:
                    result_message += f"‚Ä¢ {brand}: {len(flavors)} –≤–∫—É—Å–æ–≤\n"
            
            await update.effective_chat.send_message(result_message)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞: {e}")
            await update.effective_chat.send_message(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π: {str(e)}")
        
        finally:
            await client.disconnect()
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏–π –≤–∫—É—Å–æ–≤: {e}")
        await update.effective_chat.send_message(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")