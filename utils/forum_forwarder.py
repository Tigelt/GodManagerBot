#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –≤–µ—Ç–∫–∞–º–∏ —Ñ–æ—Ä—É–º–∞
"""

import asyncio
import time
import os
from dotenv import load_dotenv
from telethon import TelegramClient
from telethon.tl.functions.messages import GetHistoryRequest
from telethon.tl.functions.messages import ForwardMessagesRequest
from telethon.tl.types import InputPeerChannel
import logging

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –£–±–∏—Ä–∞–µ–º –ª–æ–≥–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—Ç—ã

class ForumForwarder:
    def __init__(self, session_name, api_id, api_hash):
        self.client = TelegramClient(session_name, api_id, api_hash)
        
    async def start(self):
        """–ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞"""
        await self.client.start()
        print("‚úÖ –ö–ª–∏–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω")
        
    async def stop(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞"""
        await self.client.disconnect()
        print("‚ùå –ö–ª–∏–µ–Ω—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
    async def get_chat_info(self, chat_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ"""
        try:
            entity = await self.client.get_entity(chat_id)
            print(f"üìã –ß–∞—Ç: {entity.title} (ID: {chat_id})")
            return entity
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ {chat_id}: {e}")
            return None
        
    async def forward_messages(self, source_forum_link, source_topic_id, target_forum_link, target_topic_id, delay=1):
        """
        –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –≤–µ—Ç–∫–∞–º–∏ —Ñ–æ—Ä—É–º–∞
        
        Args:
            source_forum_link: –°—Å—ã–ª–∫–∞ –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ—Ä—É–º
            source_topic_id: ID –≤–µ—Ç–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–æ—Ä—É–º–µ
            target_forum_link: –°—Å—ã–ª–∫–∞ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Ñ–æ—Ä—É–º
            target_topic_id: ID –≤–µ—Ç–∫–∏ –≤ —Ü–µ–ª–µ–≤–æ–º —Ñ–æ—Ä—É–º–µ
            delay: –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ—Å—ã–ª–∫–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        try:
            print(f"üîÑ –ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ {source_forum_link} –≤–µ—Ç–∫–∞ {source_topic_id} –≤ {target_forum_link} –≤–µ—Ç–∫–∞ {target_topic_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—É—â–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä—É–º–æ–≤
            print("üìã –ü–æ–ª—É—á–∞—é —Å—É—â–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä—É–º–æ–≤...")
            source_entity = await self.client.get_entity(source_forum_link)
            target_entity = await self.client.get_entity(target_forum_link)
            
            print(f"üìã –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–æ—Ä—É–º: {source_entity.title}")
            print(f"üìã –¶–µ–ª–µ–≤–æ–π —Ñ–æ—Ä—É–º: {target_entity.title}")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ç–∫–∏ —Ñ–æ—Ä—É–º–∞
            print(f"üîç –ü–æ–ª—É—á–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≤–µ—Ç–∫–∏ {source_topic_id}...")
            messages = []
            async for message in self.client.iter_messages(
                source_entity, 
                reply_to=source_topic_id,
                limit=None
            ):
                messages.append(message)
            
            print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≤–µ—Ç–∫–µ {source_topic_id}")
            
            if not messages:
                print("‚ùå –°–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –≤–µ—Ç–∫–µ")
                print("üîç –ü–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä—É–º–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏...")
                all_messages = []
                async for msg in self.client.iter_messages(source_entity, limit=10):
                    all_messages.append(msg)
                print(f"üìã –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä—É–º–µ: {len(all_messages)}")
                for i, msg in enumerate(all_messages):
                    print(f"   {i+1}: ID {msg.id}, reply_to: {getattr(msg.reply_to, 'reply_to_msg_id', 'None') if hasattr(msg, 'reply_to') and msg.reply_to else 'None'}")
                return
                
            print(f"üì® –ù–∞–π–¥–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏")
            
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            print(f"üöÄ –ù–∞—á–∏–Ω–∞—é –ø–µ—Ä–µ—Å—ã–ª–∫—É {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π...")
            for i, message in enumerate(messages, 1):
                print(f"üì§ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–æ–æ–±—â–µ–Ω–∏–µ {i}/{len(messages)}...")
                try:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≤–µ—Ç–∫—É —Ñ–æ—Ä—É–º–∞
                    if message.text:
                        print(f"üìù –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—Å—Ç: {message.text[:50]}...")
                        await self.client.send_message(
                            entity=target_entity,  # –°—É—â–Ω–æ—Å—Ç—å —Ñ–æ—Ä—É–º–∞
                            message=message.text,
                            reply_to=target_topic_id  # ID –≤–µ—Ç–∫–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!)
                        )
                    else:
                        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                        print("üìù –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞...")
                        await self.client.send_message(
                            entity=target_entity,  # –°—É—â–Ω–æ—Å—Ç—å —Ñ–æ—Ä—É–º–∞
                            message="[–ü–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞]",
                            reply_to=target_topic_id  # ID –≤–µ—Ç–∫–∏ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!)
                        )
                    print(f"‚úÖ –ü–µ—Ä–µ—Å–ª–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ {i}/{len(messages)}")
                    
                    # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–µ—Ä–µ—Å—ã–ª–∫–∞–º–∏
                    if i < len(messages):  # –ù–µ –∂–¥–µ–º –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                        print(f"‚è≥ –ñ–¥—É {delay} —Å–µ–∫—É–Ω–¥...")
                        await asyncio.sleep(delay)
                        
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è {i}: {e}")
                    print(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
                    continue
                    
            print("üéâ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    import sys
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env —Ñ–∞–π–ª–∞
    SESSION_NAME = 'botAccount'  # –ò–º—è —Å–µ—Å—Å–∏–∏
    API_ID = int(os.getenv('TELEGRAM_API_ID'))
    API_HASH = os.getenv('TELEGRAM_API_HASH')
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–æ—Ä—É–º–∞ - –ó–ê–ü–û–õ–ù–ò –°–ê–ú
    SOURCE_FORUM_LINK = "@gogoelis"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–æ—Ä—É–º –≥–¥–µ –ª–µ–∂–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    SOURCE_TOPIC_ID = 831  # ID –≤–µ—Ç–∫–∏ –≤ –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–æ—Ä—É–º–µ (–æ—Ç–∫—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å)
    TARGET_FORUM_LINK = "@shiflael"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Ñ–æ—Ä—É–º
    TARGET_TOPIC_ID = 2 # ID –≤–µ—Ç–∫–∏ –≤ —Ü–µ–ª–µ–≤–æ–º —Ñ–æ—Ä—É–º–µ (–∫—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–µ—Ä–µ—Å—ã–ª—å—â–∏–∫–∞
    forwarder = ForumForwarder(SESSION_NAME, API_ID, API_HASH)
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        await forwarder.start()
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        await forwarder.forward_messages(
            source_forum_link=SOURCE_FORUM_LINK,
            source_topic_id=SOURCE_TOPIC_ID,
            target_forum_link=TARGET_FORUM_LINK,
            target_topic_id=TARGET_TOPIC_ID,
            delay=1   # –ó–∞–¥–µ—Ä–∂–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
        )
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        await forwarder.stop()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø–µ—Ä–µ—Å—ã–ª—å—â–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    asyncio.run(main())
