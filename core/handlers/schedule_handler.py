"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
"""

import asyncio
import logging
from datetime import datetime, time
from telegram.ext import ContextTypes

logger = logging.getLogger(__name__)

class ScheduleHandler:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á"""
    
    def __init__(self, bot, config: dict):
        self.bot = bot
        self.config = config
        self.is_running = False
    
    async def start_scheduler(self):
        """–ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        if self.is_running:
            logger.warning("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —É–∂–µ –∑–∞–ø—É—â–µ–Ω")
            return
        
        self.is_running = True
        logger.info("üïê –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏
        asyncio.create_task(self._scheduler_loop())
    
    async def _scheduler_loop(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        while self.is_running:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC+7 (–î–∞–Ω–∞–Ω–≥)
                from datetime import timedelta
                now_utc7 = datetime.utcnow() + timedelta(hours=7)
                current_time = now_utc7.time()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
                await self._check_scheduled_tasks(current_time)
                
                # –ñ–¥—ë–º 60 —Å–µ–∫—É–Ω–¥ –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
                await asyncio.sleep(60)
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {e}")
                await asyncio.sleep(60)
    
    async def _check_scheduled_tasks(self, current_time: time):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
        
        # 10:00 ‚Äî –ó–∞–≤—Ç—Ä–∞–∫
        if current_time.hour == 10 and current_time.minute == 0:
            await self._send_message("üåû –í—Ä–µ–º—è –∑–∞–≤—Ç—Ä–∞–∫–∞—Ç—å, –±—Ä–∞—Ç—É–ª—ë—á–µ–∫.\n–ü–æ–¥–∫–∏–Ω—å —Ç–æ–ø–ª–∏–≤–æ –≤ —Å–∏—Å—Ç–µ–º—É, –¥–µ–Ω—å —Å–∞–º —Å–µ–±—è –Ω–µ —Å–¥–µ–ª–∞–µ—Ç.")
        
        # 11:00 ‚Äî –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã
        if current_time.hour == 11 and current_time.minute == 0:
            await self._send_message("‚öôÔ∏è –ü—Ä–∏—Å—Ç—É–ø–∞–µ–º –∫ –¥–µ–ª—É, –±—Ä–∞—Ç.\n–ü–µ—Ä–≤—ã–π —Ä–∞—É–Ω–¥ –Ω–∞ 5 —á–∞—Å–æ–≤ 11-17.\n–°–æ–±–µ—Ä–∏—Å—å ‚Äî –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å, –∏ —É –Ω–∞—Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ.")
        
        # 12:00 ‚Äî –¢–∞–±–ª–µ—Ç–∫–∞ –º–∞–≥–Ω–∏—è
        if current_time.hour == 12 and current_time.minute == 0:
            await self._send_message("üíä –ú–∞–≥–Ω–∏–π, –±—Ä–∞—Ç–∏—à–∫–∞.\n–ë–µ–∑–º–æ–ª–≤–Ω–æ–µ –ø–æ–¥–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Å–∏–ª—ã.")
        
        # 15:45 ‚Äî –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –æ–±–µ–¥–µ
        if current_time.hour == 15 and current_time.minute == 45:
            await self._send_message("üç¥ –û—Å—Ç–∞–ª–æ—Å—å 15 –º–∏–Ω—É—Ç –¥–æ –æ–±–µ–¥–∞.\n–ü–æ–¥–≤–æ–¥–∏ –∏—Ç–æ–≥–∏ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã –¥–Ω—è, –∑–∞–∫—Ä—É–≥–ª—è–π –Ω–∞—á–∞—Ç–æ–µ.")
        
        # 16:00 ‚Äî –†–∞–∑–º–∏–Ω–∫–∞ –∏ –æ–±–µ–¥
        if current_time.hour == 16 and current_time.minute == 0:
            await self._send_message("ü•ó –í—Ä–µ–º—è —Ä–∞–∑–º—è—Ç—å—Å—è, –ø–æ–¥—ã—à–∞—Ç—å, –ø–æ–æ–±–µ–¥–∞—Ç—å.\n–ö–æ—Ä–æ—Ç–∫–∏–π —Ä–∏—Ç—É–∞–ª —Å–∏–ª—ã ‚Äî –∏ —Å–Ω–æ–≤–∞ –≤ —Å—Ç—Ä–æ–π.")
        
        # 17:00 ‚Äî –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–∞–±–æ—Ç–µ
        if current_time.hour == 17 and current_time.minute == 0:
            await self._send_message("üöÄ –í—Ä–µ–º—è –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–æ—Ç–æ–∫.\n–í—Ç–æ—Ä–æ–π —Ä–∞—É–Ω–¥ –Ω–∞ 4 —á–∞—Å–∞ 17-21.")
        
        # 20:45 ‚Äî –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º —É–∂–∏–Ω–µ
        if current_time.hour == 20 and current_time.minute == 45:
            await self._send_message("‚è∞ –°–∫–æ—Ä–æ —É–∂–∏–Ω, –±—Ä–∞—Ç—É–ª—ë—á–µ–∫.\n–ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Ç–µ–∫—É—â–∏–µ –¥–µ–ª–∞, –Ω–∞—Å—Ç—Ä–æ–π—Å—è –Ω–∞ –º—è–≥–∫–æ–µ –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏–µ.")
        
        # 21:00 ‚Äî –£–∂–∏–Ω –∏ –≤–µ—á–µ—Ä–Ω—è—è –∑–∞—Ä—è–¥–∫–∞
        if current_time.hour == 21 and current_time.minute == 0:
            await self._send_message("üçõ –í—Ä–µ–º—è —É–∂–∏–Ω–∞ –∏ –ª—ë–≥–∫–æ–π –∑–∞—Ä—è–¥–∫–∏.\n–¢–µ–ª–æ ‚Äî —Ç–≤–æ–π –¥–≤–∏–≥–∞—Ç–µ–ª—å, –¥–µ—Ä–∂–∏ –µ–≥–æ –≤ —Ç–æ–Ω—É—Å–µ.")
        
        # 22:45 ‚Äî –ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç—Å—è
        if current_time.hour == 22 and current_time.minute == 45:
            await self._send_message("üåô –°–∫–æ—Ä–æ –∫–æ–Ω–µ—Ü –¥–Ω—è.")
        
        # 23:00 ‚Äî –ö–æ–Ω–µ—Ü —Å–º–µ–Ω—ã
        if current_time.hour == 23 and current_time.minute == 0:
            await self._send_message("üßò –§–∏–Ω–∏—à.\n–í—Å—ë —Å–¥–µ–ª–∞–Ω–æ. –û—Ç–ø—É—Å—Ç–∏ –¥–µ–Ω—å, –∫–∞–∫ —Å—Ç—Ä–µ–ª—É –≤ –Ω–µ–±–æ.")
        
        # 00:00 ‚Äî –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–Ω—è
        if current_time.hour == 0 and current_time.minute == 0:
            await self._send_message("üåå –°–ø–∞—Å–∏–±–æ –∑–∞ —ç—Ç–æ—Ç –∫—Ä–∞—Å–∏–≤—ã–π –¥–µ–Ω—å.\n–î–æ–±—Ä–æ–π –Ω–æ—á–∏, —Ä–æ–¥–Ω–æ–π. –í—Ä–µ–º—è –æ—Ç—Ö–æ–¥–∏—Ç—å –∫–æ —Å–Ω—É ‚Äî –∑–∞–≤—Ç—Ä–∞ –Ω–æ–≤–∞—è –æ—Ö–æ—Ç–∞.")
    
    async def _send_message(self, text: str):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        print(f"üì® [SCHEDULER] {text}")
        
        try:
            await self.bot.send_message(
                chat_id=self.config['admin_chat_id'],
                text=text
            )
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {text[:50]}...")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    
    def stop_scheduler(self):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        self.is_running = False
        logger.info("üõë –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

