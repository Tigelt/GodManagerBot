"""
–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞
–£–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import asyncio
import logging
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, filters
from telegram import Update
from telegram.ext import ContextTypes

from services.moy_sklad import MoySkladAPI
from services.telegram_client import TelegramClientService
from services.google_sheets import GoogleSheetsService
from core.handlers.order_handler import OrderHandler
from core.handlers.assortment_handler import AssortmentHandler
from core.handlers.schedule_handler import ScheduleHandler

logger = logging.getLogger(__name__)

class GodManagerBot:
    """–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ—Ç–∞"""
    
    def __init__(self, config):
        self.config = config
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã
        self.moy_sklad = MoySkladAPI(config['moy_sklad_token'], config)
        self.telegram_client = TelegramClientService(
            config['telegram_api_id'],
            config['telegram_api_hash'],
            config['session_file']
        )
        self.google_sheets = GoogleSheetsService(config['google_sheets_key_base64'])
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        self.assortment_handler = AssortmentHandler(self.telegram_client, self.moy_sklad, config)
        self.order_handler = OrderHandler(self.moy_sklad, self.google_sheets, self.telegram_client, config, self.assortment_handler)
        self.schedule_handler = None  # –ë—É–¥–µ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è app
        
        # Telegram Bot Application
        self.app = None
        
    def start(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å—ã (—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ)
            import asyncio
            asyncio.get_event_loop().run_until_complete(self.telegram_client.initialize())
            print("‚úÖ Telegram –∫–ª–∏–µ–Ω—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            asyncio.get_event_loop().run_until_complete(self.google_sheets.initialize())
            print("‚úÖ Google Sheets –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –°–æ–∑–¥–∞–µ–º Telegram Bot Application
            print(f"üîç Bot token: {self.config['bot_token'][:10]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 —Å–∏–º–≤–æ–ª–æ–≤
            self.app = ApplicationBuilder().token(self.config['bot_token']).build()
            
            # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
            self._register_handlers()
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
            self._set_commands_menu()
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
            self.schedule_handler = ScheduleHandler(self.app.bot, self.config)
            asyncio.get_event_loop().run_until_complete(self.schedule_handler.start_scheduler())
            print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—é –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞
            asyncio.get_event_loop().run_until_complete(self.assortment_handler.start_auto_publish())
            print("‚úÖ –ê–≤—Ç–æ–ø—É–±–ª–∏–∫–∞—Ü–∏—è –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ –∑–∞–ø—É—â–µ–Ω–∞")
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            print("ü§ñ Bot –∑–∞–ø—É—â–µ–Ω")
            # –ü—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å–∫–∞–µ–º polling - —ç—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—â–∏–π –≤—ã–∑–æ–≤ (–∫–∞–∫ –≤ —Å—Ç–∞—Ä–æ–º –ø—Ä–æ–µ–∫—Ç–µ)
            self.app.run_polling()
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
            raise
    
    def _register_handlers(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
        # –ö–æ–º–∞–Ω–¥—ã
        self.app.add_handler(CommandHandler("start", self._handle_start))
        self.app.add_handler(CommandHandler("assortment", self.assortment_handler.handle_assortment_command))
        self.app.add_handler(CommandHandler("updateassortment", self.assortment_handler.handle_update_assortment_command))
        self.app.add_handler(CommandHandler("baseflavor", self.assortment_handler.handle_base_flavor_command))
        self.app.add_handler(CommandHandler("inventory", self.assortment_handler.handle_inventory_command))
        self.app.add_handler(CommandHandler("publishmenu", self.assortment_handler.handle_publish_menu_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self._handle_message))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
        self.app.add_handler(CallbackQueryHandler(self.order_handler.handle_callback))
        
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    
    def _set_commands_menu(self):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥"""
        from telegram import BotCommand
        
        commands = [
            BotCommand("start", "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
            BotCommand("assortment", "–ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞"),
            BotCommand("updateassortment", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞"),
            BotCommand("baseflavor", "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏–π –≤–∫—É—Å–æ–≤"),
            BotCommand("inventory", "–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å"),
            BotCommand("publishmenu", "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –º–µ–Ω—é (Gastro)")
        ]
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        import asyncio
        asyncio.get_event_loop().run_until_complete(
            self.app.bot.set_my_commands(commands)
        )
        print("‚úÖ –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    
    async def _handle_start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        chat_id = update.message.chat_id
        username = update.message.from_user.username
        await update.message.reply_text(f"ü§ñ GodManagerBot v2.0 –∑–∞–ø—É—â–µ–Ω!\n\nüÜî –¢–≤–æ–π Chat ID: `{chat_id}`\nüë§ Username: @{username}")
    
    async def _handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user = update.message.from_user.username
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∑–∞–∫–∞–∑–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if user == self.config['shisha_username']:
            await self.order_handler.handle_shisha(update, context)
        elif user == self.config['gastro_username']:
            await self.order_handler.handle_gastro(update, context)
        else:
            await update.message.reply_text("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
